Get array first value

check equals to him

get the rows

compare rows 


first for loop - run on filterd by date array

second for loop - run on same thing







1. Exec Qty
2. Total charge

3. User, Date.... Portfolio (first -)


            // console.log(
                //   "date: " +
                //     WEXRow.Date +
                //     " = " +
                //     date +
                //     " side: " +
                //     WEXRow.Side!.charAt(0).toLowerCase() +
                //     " = " +
                //     side!.charAt(0).toLowerCase() +
                //     " root: " +
                //     WEXRow.Root!.toLowerCase() +
                //     " = " +
                //     symbol!.toLowerCase() +
                //     " C/P: " +
                //     WEXRow["Call/Put"]?.charAt(0).toLowerCase() +
                //     " = " +
                //     option?.charAt(0).toLowerCase() +
                //     " QTY: " +
                //     convertToNumber(WEXRow["Exec Qty"]!.toString()) +
                //     " = " +
                //     Number(quantity) +
                //     " AVE: " +
                //     Number(WEXRow["Average Price"]).toFixed(2) +
                //     " = " +
                //     Number(price).toFixed(2) +
                //     " strike: " +
                //     Number(WEXRow.Strike?.substring(1)) +
                //     " = " +
                //     Number(strike) +
                //     " expiry: " +
                //     formatWEXDate(WEXRow.Expiry!) +
                //     " = " +
                //     formatDRVDate(expiry!)
                // )







      groupedWEXArrayKeys.forEach((element: string) => {
        const groupedWEXArrayMergedQtyAndAvePrice: IWEXInterface[] = [
          ...groupedWEXArray[element]
            .reduce((map, item) => {
              const {
                Date: key,
                "Exec Qty": execQty,
                "Average Price": averagePrice,
              } = item;
              const prev: IWEXInterface = map.get(key);

              if (prev) {
                prev["Exec Qty"]! = (
                  Number(prev["Exec Qty"]) + Number(execQty)
                ).toString();
                prev["Average Price"]! = getAverage(
                  Number(prev["Average Price"]?.replace("$", "")),
                  Number(averagePrice?.replace("$", ""))
                );
              } else {
                map.set(key, Object.assign({}, item));
              }

              return map;
            }, new Map())
            .values(),
        ];
      });

Portfolio - after dash when grouping?
Total charge - toFixed?

      const getAverage = (x: number, y: number) => {
        const average = (x + y) / 2;
        const roundedAverage =
          Math.round((average + Number.EPSILON) * 100) / 100;
        return roundedAverage;
      };